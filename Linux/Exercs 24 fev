touch new_file.txt
touch some_file.txt some_other_file.txt

Parent Directories
The cd command "changes directory" to move into a directory. But how do you move back out of the current directory?
The answer is two dots: ..
.. is a special alias that refers to "the parent directory". It's a shortcut that you can use to move up one level in the directory tree.


Absolute vs. Relative Paths
We've mostly been dealing with relative filepaths which are paths that take your current directory into account. For example, let's say we have the following directory structure in our filesystem:
vehicles
├── cars
│   ├── fords
│   │   ├── mustang.txt
│   │   └── focus.txt


When inside the top-level vehicles directory, the relative path to the mustang.txt file is:
cars/fords/mustang.txt


However, when we're inside the cars directory, the relative path to the mustang.txt file is just:
fords/mustang.txt


Or when inside the fords directory, just:
mustang.txt
Files
You're probably familiar with the concept of files from using a GUI like Windows Explorer or Finder.
At their core, files are just blobs of data. The raw bytes in a file can represent anything: text, images, videos, etc.
The cat Command
The cat command is used to view the contents of a file. It's short for "concatenate", which is a fancy way of saying "put things together". It can feel like a confusing name if you're using the cat command to view a single file, but it makes more sense when you're using it to view multiple files at once.
# Print the contents of a file to the terminal
cat file1.txt


# Concatenate the contents of multiple files and print them to the terminal
cat file1.txt file2.txt


Files
You're probably familiar with the concept of files from using a GUI like Windows Explorer or Finder.
At their core, files are just blobs of data. The raw bytes in a file can represent anything: text, images, videos, etc.
The cat Command
The cat command is used to view the contents of a file. It's short for "concatenate", which is a fancy way of saying "put things together". It can feel like a confusing name if you're using the cat command to view a single file, but it makes more sense when you're using it to view multiple files at once.
# Print the contents of a file to the terminal
cat file1.txt


# Concatenate the contents of multiple files and print them to the terminal
cat file1.txt file2.txt
head and tail
Sometimes you don't want to print everything in a file. Files can be really big after all.
The head Command
The head command prints the first n lines of a file, where n is a number you specify.
head -n 10 file1.txt


If you don't specify a number, it will default to 10.
The tail Command
The tail command prints the last n lines of a file, where n is a number you specify.
tail -n 10 file1.txt










More and Less
The more and less commands let you view the contents of a file, one page (or line) at a time.
As the adage goes, less is more.
In the context of these commands, less is literally more. The less command does everything that the more command does but also has more features. As a general rule, you should use less instead of more.
You would only use more if you're on a system that doesn't have less installed.
You found nothing suspicious in the first and last transactions of 2023, but you're not done yet! It's time to dig through the middle of the file as well.
Run less and pass in the path to the 2023.csv file, located at the root in the worldbanc/private/transactions directory.
less 2023.csv


Notice that you're now in an interactive mode and you've lost your shell prompt! That's because less has taken over your terminal window.
Press "enter" a few times to scroll down a few lines, just to see how that works. Press "q" to exit the less program and return to your shell prompt.
Re-run the less command, but this time, pass in the -N flag to show line numbers:
less -N 2023.csv


You can use the spacebar to scroll down a page at a time, and you can go back up by pressing "b".
Find line 153. Copy and paste the contents of that line into the text field and submit it.
You can use "q" to exit less at any time.


Touch
The touch command updates the access and modification timestamps of a file. By default, if the specified file does not exist, touch will create an empty file with the given filename. Because of this side-effect, you’ll often see this command used to quickly create new empty files.
touch new_file.txt


You can also create multiple files at once by listing them:
touch some_file.txt some_other_file.txt


touch can be very handy when writing scripts because it ensures files exist without altering existing ones, creating new files only if necessary.
